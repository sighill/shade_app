THIS IS THE UBUNTU SERVER INSTALL AND CONFIG LOG
CREATED 2015 11 25

# ~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.
Preliminary notes
    Distro : ubuntu server 14.04
    Installed packages during ubuntu install :
        SSH Server
        Mail Server
        LAMP Server
        Postgresql Server 9.3 # Has been replaced with 9.4

# ~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.
TODO
    # Useful packages ?
        check-postgres
        cl-pgloader
        hydra
        hydra-gtk
        kamailio
        libapache2-mod-auth-pgsql
        libqt5sql5-psql (QT5 pour postgresql)
        pg-activity (monitoring realt time utility)
        pgagent (planificateur de taches)
        pgrouting
        pgrouting-doc
        libmapnik2.2
        mapnik-utils
        python-django-adminaudit
        python-django-auth-ldap
        python-django-auth-ldap-doc
        python-django-extensions
        python-django-filters
        python-django-floppyforms
        python-django-tables2
        python-django-tables2-doc

# ~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.
Useful commands
    tree # display current dir contents as a tree
    service --status-all # display all running services
    find / -name '' # find <path> -name 'pattern with % and ?'
    w3m http://etc # Display a webpage through commandline
    # Access a usb stick
        fdisk -l
        mkdir /media/usb
        mount /dev/<usbname> /media/usb
        umount /media/usb # when finished
    # setup a common working directory and group
        sudo su
        mkdir /home/common
        groupadd common-users
        useradd common-admin -d /home/common -g common-users
        usermod -a -G common-users shogo
        chown -R common-admin.common-users /home/common
        chmod -R 775 /home/common
        chmod -R 2775 /home/common/

# ~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.
Initial update & upgrade
    apt-get update
    apt-get upgrade

# ~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.
fail2ban install & configuration
    apt-get install fail2ban
    cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local
    vim /etc/fail2ban/jail.local
        # Variables modified :
            ignoreip 127.0.0.1/8 192.0.0.0/8
            bantime : -1
            findtime : 3600
        # Save the document
    service fail2ban restart

    #List banned ips
    sudo iptables -L -n

    # unban ip
    fail2ban-client set <jail-name> unbanip <ip>
    # Exemple : fail2ban-client set pam-generic unbanip 192.168.0.10

# ~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.
ssh server install & configuration
    vim /etc/ssh/sshd_config
        # Change all the variables
        # Save the document
    service ssh restart

# ~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.
User management
    # sublogin as root
    sudo su

    # create user
    adduser shogo
        UNIX password : ********
        Full name : keleos
        Room Number []:
        Work Phone []:
        Home Phone []:
        Other []:

    # give user sudo power
    adduser shogo sudo

    # Check all the groups an user is part of
    groups shogo

# ~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.
vim colorscheme
    vim /etc/vim/vimrc
        # added this line at the end of the document :
        colorscheme desert # good enough, plan to install jellybeans
        # Save the document

# ~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.
Bash input color
    
    cd /home/shogo
    cp .bashrc .bashrc-backup
    vim .bashrc
    # go to http://bashrcgenerator.com/
    # Paste the export string to the end of the doc
    # Example

        export PS1="{\[$(tput sgr0)\]\[\033[38;5;202m\]\u\[$(tput sgr0)\]\[\033[38;5;15m\]@\[$(tput sgr0)\]\[\033[38;5;32m\]\h\[$(tput sgr0)\]\[\033[38;5;15m\]}: \[$(tput sgr0)\]"

# ~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.
Python 3.4 install
    Hurr ? No reminder of this but i have installed it.
    Also forced python3 as default using
    alias python=python3

# ~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.
Postgresql server 9.5 install & configuration (+ postgis,psycopg2)
    sudo su
    vim /etc/apt/sources.list.d/pgdg.list
    # Paste
    deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main
    # in bash
    wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
    apt-get update
    
    # List the current pgclusters
    pg_lsclusters
    # Drop the postgresql 9.3 cluster
    pg_dropcluster --stop 9.3 main
    # Restart pg service
    service postgresql restart
    # Configuration - pg_hba.conf
    vim /etc/postgresql/9.5/main/pg_hba.conf
        # Under # IPV4 local connections, add :
            host    all     all     192.168.0.*/32 #my local IP
            host    all     all     *.*.*.*/32 # keleos IP
    # Save the document
    # Configuration - postgresql.conf
    vim /etc/postgresql/9.5/main/postgresql.conf
        # Under connection settings, UNCOMMENT and add
        listen_addresses = 'localhost' ####'localhost,[myIP@],[keleosIP]'
        
        # Save the document
    service postgresql restart
    # Change the postgres user password
    sudo -u postgres psql
    alter user postgres with encrypted password '***';
    \q
    # Don't forget to allow port 5432 to ufw
    # Install useful extentions
    apt-get install postgresql-9.5-postgis-2.2
    apt-get install python3-psycopg2
    # Activate postgis
    sudo -u postgres psql
    create extension postgis;

# ~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.
Postgresql user management
    sudo -u postgres psql
    create role admin;

# ~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.
Git install & configuration
    # Install
    apt-get install git
    # Initiate
    mkdir /home/sighil/git && cd /home/sighil/git
    git init
    git pull https://url-of-the-repo

# ~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.
Teamspeak 3 install & configuration

    cd /home/shogo/downloads
    # Check the latest server version
    https://www.teamspeak.com/downloads
        # Now it is 3.0.12.3
    # Copy next string and change the version to the current one
    wget http://ftp.4players.de/pub/hosted/ts3/releases/3.0.12.3/teamspeak3-server_linux_amd64-3.0.12.3.tar.bz2
    # Extract the files
    tar xvjf teamspeak3-server_linux_amd64-3.0.12.3.tar.bz2
    #### Move the extracted directory to /etc
    ###mv teamspeak3-server_linux-amd64 /etc
    # Link the TS start script to the linux service start directory
    ln -s /etc/teamspeak3-server_linux-amd64/ts3server_startscript.sh /etc/init.d/teamspeak
    # Enable teamspeak autostart at boot
    update-rc.d teamspeak defaults
    # WRITE DOWN LOGINNAME, PASSWORD AND TOKEN
    # Login to the TS using a client
    # Claim admin privileges with token
    # Add password

# ~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.
Change hardware behavior
    # Disable shutdown when PC lid is closed
    vim /etc/systemd/logind.conf
        # Change value :
        HandleLidSwitch=ignore
    # Save fileument

# ~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.
Install & configure mail server
    # Source : http://doc.ubuntu-fr.org/postfix
    adduser postfix sasl
    dpkg-reconfigure postfix
        Site internet
        voxclam.fr
        voxclam
        voxclam.fr, voxclamServer, localhost.voxclam.fr, localhost
        Non
        127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128 192.0.0.0/8
        Oui
        51200000
        +
        Tous
    # Save fileument
    vim /etc/aliases
        postmaster:     root,voxclam
    # Save fileument
    sudo postconf -e 'smtpd_sasl_local_domain ='
    sudo  postconf -e 'smtpd_sasl_auth_enable = yes'
    sudo  postconf -e 'smtpd_sasl_security_options = noanonymous'
    sudo  postconf -e 'broken_sasl_auth_clients = yes'
    sudo  postconf -e 'smtpd_recipient_restrictions = permit_sasl_authenticated,permit_mynetworks,reject_unauth_destination'
    sudo  postconf -e 'inet_interfaces = all'
    sudo  touch /etc/postfix/sasl/smtpd.conf
    sudo su
    echo 'pwcheck_method: saslauthd' >> /etc/postfix/sasl/smtpd.conf
    echo 'mech_list: plain login' >> /etc/postfix/sasl/smtpd.conf
    exit
    sudo mkdir /etc/postfix/ssl
    cd /etc/postfix/ssl/
    sudo openssl genrsa -des3 -rand /etc/hosts -out smtpd.key 1024
        # Passphrase : SmT + usual characters
    sudo openssl req -new -key smtpd.key -out smtpd.csr
        FR
        LOIRE-ATLANTIQUE
        NANTES
        NONE
        NONE
        voxclam.fr
        root@voxclam.fr
        Mot de passe ? # hurr i dunno what it is
        <nothing>
    sudo  openssl x509 -req -days 3650 -in smtpd.csr -signkey smtpd.key -out smtpd.crt
    sudo openssl rsa -in smtpd.key -out smtpd.key.unencrypted
    sudo mv -f smtpd.key.unencrypted smtpd.key
    sudo chmod 600 smtpd.key
    sudo openssl req -new -x509 -extensions v3_ca -keyout cakey.pem -out cacert.pem -days 3650
        # Passphrase : PeM + usual characters
        FR
        LOIRE-ATLANTIQUE
        NANTES
        NONE
        NONE
        voxclam.fr
        root@voxclam.fr
    sudo postconf -e 'smtpd_tls_auth_only = no'
    sudo postconf -e 'smtp_use_tls = yes'
    sudo postconf -e 'smtpd_use_tls = yes'
    sudo postconf -e 'smtp_tls_note_starttls_offer = yes'
    # Holy shit wtf am i doing
    sudo postconf -e 'smtpd_tls_key_file = /etc/postfix/ssl/smtpd.key'
    sudo postconf -e 'smtpd_tls_cert_file = /etc/postfix/ssl/smtpd.crt'
    sudo postconf -e 'smtpd_tls_CAfile = /etc/postfix/ssl/cacert.pem'
    sudo postconf -e 'smtpd_tls_loglevel = 1'
    sudo postconf -e 'smtpd_tls_received_header = yes'
    # Help me
    sudo postconf -e 'smtpd_tls_session_cache_timeout = 3600s'
    sudo postconf -e 'tls_random_source = dev:/dev/urandom'
    sudo postconf -e 'myhostname = voxclam.fr'
    # That went well
    sudo vim /etc/postfix/main.cf
        # The entire document has been replaced by :
        # See /usr/share/postfix/main.cf.dist for a commented, more complete version

        smtpd_banner = $myhostname ESMTP $mail_name (Ubuntu)
        biff = no

        # appending .domain is the MUA's job.
        append_dot_mydomain = no

        # Uncomment the next line to generate "delayed mail" warnings
        #delay_warning_time = 4h

        myhostname = voxclam.fr
        alias_maps = hash:/etc/aliases
        alias_database = hash:/etc/aliases
        myorigin = /etc/mailname
        mydestination = voxclam.fr, localhost.voxclam.fr, localhost
        relayhost =
        mynetworks = 127.0.0.0/8 192.0.0.0/8
        mailbox_size_limit = 0
        recipient_delimiter = +
        inet_interfaces = all
        smtpd_sasl_local_domain =
        smtpd_sasl_auth_enable = yes
        smtpd_sasl_security_options = noanonymous
        broken_sasl_auth_clients = yes
        smtpd_recipient_restrictions = permit_sasl_authenticated,permit_mynetworks,reject_unauth_destination
        smtpd_tls_auth_only = no
        smtp_use_tls = yes
        smtpd_use_tls = yes
        smtp_tls_note_starttls_offer = yes
        smtpd_tls_key_file = /etc/postfix/ssl/smtpd.key
        smtpd_tls_cert_file = /etc/postfix/ssl/smtpd.crt
        smtpd_tls_CAfile = /etc/postfix/ssl/cacert.pem
        smtpd_tls_loglevel = 1
        smtpd_tls_received_header = yes
        smtpd_tls_session_cache_timeout = 3600s
        tls_random_source = dev:/dev/urandom
    # Save fileument
    Freebox : disable out SMTP blockade + reboot
    sudo service postfix restart
    sudo apt-get install libsasl2-modules libsasl2-modules-sql libgsasl7
    sudo apt-get install libauthen-sasl-cyrus-perl sasl2-bin libpam-mysql
    sudo su
    mkdir -p /var/spool/postfix/var/run/saslauthd
    rm -fr /var/run/saslauthd
    ln -s /var/spool/postfix/var/run/saslauthd /var/run/saslauthd
    chown -R root:sasl /var/spool/postfix/var/
    chmod 710 /var/spool/postfix/var/run/saslauthd
    adduser postfix sasl
    vim /etc/default/saslauthd
        # Change lines :
        START=yes
        MECHANISMS="pam shadow"
        OPTIONS="-m /var/spool/postfix/var/run/saslauthd"
    # Save fileument
    sudo service saslauthd start
    # Test
    telnet localhost 25
        Enter EHLO somename.tld
        # Output is OK accroding to source website
    quit

# ~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.
Install Django on system file
    # repo version is 1.6.1, I want 1.8
    # source : https://docs.djangoproject.com/en/1.8/topics/install
    # install django for python 3.4
    apt-get install python3-pip
    pip3 install virtualenv virtualenvwrapper django
    # Creating a project
    cd /home/shogo
    django-admin startproject vsite
    cd vsite
    vim vsite/settings.py
        LANGUAGE_CODE = 'fr-fr'
        # No test with postgresql yet although it'll be the production db
        # Save file
    python manage.py migrate
    python manage.py runserver # start the Django development server

# ~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.
Install Tree
    apt-get install tree

# ~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.
Config public key authentication for ssh and other stuff
    mkdir ~/.ssh
    chmod 700 ~/.ssh
    ssh-keygen -t rsa

# ~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.
Website configuration
    # Our site is developed under virtual host method
    # Source : https://doc.ubuntu-fr.org/tutoriel/virtualhosts_avec_apache2
    vim /etc/hosts
        127.0.0.1 voxclam.fr
        # Save file
    # Creating the dev directory NOT in /var/www
    mkdir /home/voxclam/www-dev/site_voxclam
    # Tell Unix to point the var/www to the dev directory
    ln -s /home/voxclam/www-dev/site_voxclam /var/www/voxclam
    # Make it world readable and executable
    # See http://www.onlineconversion.com/html_chmod_calculator.htm
    chmod 755 /home/voxclam/www-dev/site_voxclam
    # Add voxclam.conf to available websites configurations
    vim /etc/apache2/sites-available/voxclam.conf
        # Add the data found in the source tutorial
        # Replace key values as you wish
        # Save file
    # Enable the website
    a2ensite voxclam.conf
    # Restart Apache2 to save all modifications
    sudo service apache2 restart
    # Add WSGI interface module
    sudo apt-get install libapache2-mod-wsgi-py3

# ~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.
Install vsftpd - ftp server
    sudo apt-get install vsftpd
    Modifiy /etc/vsftpd.conf

# ~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.
Install Qgis-Server et lizmap
    # Add the qgis lib to sources.list
    /etc/apt/sources.list
        deb     http://qgis.org/debian trusty main 
        deb-src http://qgis.org/debian trusty main 

    # Add the repo public keys
    sudo su
    cd # Se placer à la racine serveur
    #####        # Aller à l'adresse suivante sur un navigateur
    #####        https://www.qgis.org/fr/site/forusers/alldownloads.html
    #####        # Récupérer les informations mises à jour pour ajouter la cle publique
    #####        wget -O - http://qgis.org/downloads/qgis-2015.gpg.key | gpg --import
    #####           # Date à mettre à jour
    #####        gpg --fingerprint 3FF5FFCAD71472C4 
    #####           # hash à mettre à jour
    #####        gpg --export --armor 3FF5FFCAD71472C4 | sudo apt-key add -
    #####           # Hash à mettre à jour
    #####           # Output voulu : 'OK'
    #####        apt-get update
    #####           # Ne doit pas renvoyer un problème de clef sur le repo qgis
    #####        
    # Add the ubuntugis unstable ppa :
    sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable
    # https://launchpad.net/~ubuntugis/+archive/ubuntu/ubuntugis-unstable
    sudo apt-get qgis-Server python-qgis unzip
    sudo su # only useful if you are not logged in as root
    apt-get update # update packages
    apt-get install apache2 php5 curl php5-curl php5-sqlite php5-pgsql php5-gd
    service apache2 restart # restart Apache server
    cd /var/www/
    # Options
    MYAPP=lizmap-web-client
    VERSION=2.12.2
    # Archive recovery with wget
    wget https://github.com/3liz/$MYAPP/archive/$VERSION.zip
    # Unzip archive
    unzip $VERSION.zip
    # virtual link for http://localhost/lm
    ln -s /var/www/$MYAPP-$VERSION/lizmap/www/ /var/www/html/lm
    # Remove archive
    rm $VERSION.zip

# ~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.
Enable and setup ufw (firewall user interface)

    sudo ufw enable
    sudo ufw allow 22 # to open port 22 at iptables

# ~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.
Bacula 2 - server backup

    apt-get install bacula
    # use dbconfig-common automatically
    # enter passwords

# ~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.
Webmapping using Django
    sudo su
    pip3 install django-leaflet
        # Installs leaflet API to use with Django
    pip3 install django-geoJSON
        # Installs geoJSON libraries to translate postgres vector data 
        # to JSON objects able to be read by leaflet