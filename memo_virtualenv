# MEMO VIRTUALENV ET VIRTUALENVWRAPPER

# ---------------------------------------------------------------------------
# PARTIE O - Présentation des outils et commandes utiles
# Source : http://docs.python-guide.org/en/latest/dev/virtualenvs/
# ----------------------------------------------------------------------------

# 1. Virtualenv
	# A Virtual Environment is a tool to keep the dependencies required by 
	# different projects in separate places, by creating virtual Python 
	# environments for them. It solves the “Project X depends on version 1.x 
	# but, Project Y needs 4.x” dilemma, and keeps your global site-packages 
	# directory clean and manageable.
	# For example, you can work on a project which requires Django 1.3 while 
	# also maintaining a project which requires Django 1.0.

# 2. virtualenvwrapper 
	# Virtualenvwrapper provides a set of commands which makes working 
	# with virtual environments much more pleasant. 
	# It also places all your virtual environments in one place.

# 3. Créer un environnement virtuel
	mkvirtualenv venv
	# Crée un dossier venv dans /home/common/.virtualenvs

# 4. Activer le travail dans l'environnement
	workon venv

# 5. Désactiver l'environnement activé
	deactivate

# 6. Supprimer un environnement virtuel
	rmvirtualenv venv

# 7. Lister les environnements
	lsvirtualenv

# 8. Naviguer dans le dossier de l'env activé
	cdvirtualenv

# ---------------------------------------------------------------------------
# PARTIE I - Setup général
# TOUS LES USERS DOIVENT FAIRE CETTE PARTIE POUR TRAVAILLER AVEC VEW !
# ---------------------------------------------------------------------------

# 1. Setup des variables
	# Add lines to your shell startup file (/home/<user>/.bashrc) 
	# to set the location where the virtual environments should live, 
	# the location of your development project directories, 
	# and the location of the script installed with this package:

	# Démarrer putty et taper :
	sudo nano .bashrc
	# Ajouter ces lignes à la fin du document :
		# Variables pour virtualenvwrapper
		export WORKON_HOME=/home/common/.virtualenvs
		export PROJECT_HOME=/home/common/Devel
		source /usr/local/bin/virtualenvwrapper.sh
		# oblige pip à installer dans des virtual envs
		export PIP_REQUIRE_VIRTUALENV=true

	# Redémarrer la session ssh pour activer le nouveau .bashrc

# ---------------------------------------------------------------------------
# PARTIE II - Commandes utiles

# ---------------------------------------------------------------------------

# 1. Créer un environnement virtuel
	mkvirtualenv venv
	# Crée un dossier venv dans /home/common/.virtualenvs

# 2. Activer le travail dans l'environnement
	workon venv

# 3. Désactiver l'environnement activé
	deactivate

# 4. Supprimer un environnement virtuel
	rmvirtualenv venv


lsvirtualenv
    List all of the environments.
cdvirtualenv
    Navigate into the directory of the currently activated virtual environment, so you can browse its site-packages, for example.
cdsitepackages
    Like the above, but directly into site-packages directory.
lssitepackages
    Shows contents of site-packages directory. 